[
  {
    "question": "¿Qué métrica evalúa la capacidad del software para funcionar correctamente bajo condiciones específicas?",
    "options": ["Fiabilidad", "Usabilidad", "Portabilidad", "Eficiencia"],
    "answer": 0,
    "explanation": "La fiabilidad mide si el software puede operar sin fallos en condiciones definidas durante un tiempo determinado."
  },
  {
    "question": "¿Qué técnica permite verificar que los requisitos están completos y correctos antes del desarrollo?",
    "options": ["Codificación", "Revisión de requisitos", "Pruebas unitarias", "Diseño técnico"],
    "answer": 1,
    "explanation": "La revisión de requisitos permite detectar errores, ambigüedades o inconsistencias antes de implementar el sistema."
  },
  {
    "question": "¿Qué patrón arquitectónico promueve la separación entre presentación, lógica y datos?",
    "options": ["Cliente-servidor", "MVC", "Microservicios", "Monolítico"],
    "answer": 1,
    "explanation": "MVC divide el sistema en Modelo, Vista y Controlador, facilitando mantenimiento y escalabilidad."
  },
  {
    "question": "¿Qué tipo de prueba se realiza para verificar que el sistema cumple con los requisitos del cliente?",
    "options": ["Prueba de aceptación", "Prueba de integración", "Prueba de carga", "Prueba de unidad"],
    "answer": 0,
    "explanation": "La prueba de aceptación valida que el sistema cumple con lo que el cliente espera según los requisitos definidos."
  },
  {
    "question": "¿Qué técnica se usa para representar visualmente el flujo de control en un algoritmo?",
    "options": ["Diagrama de flujo", "Diagrama de clases", "Diagrama de estados", "Casos de uso"],
    "answer": 0,
    "explanation": "El diagrama de flujo muestra el orden de ejecución de instrucciones y decisiones en un algoritmo."
  },
  {
    "question": "¿Qué métrica evalúa qué tan fácil es modificar, corregir o mejorar el software?",
    "options": ["Portabilidad", "Mantenibilidad", "Fiabilidad", "Usabilidad"],
    "answer": 1,
    "explanation": "La mantenibilidad mide la facilidad con la que se puede cambiar el software sin introducir errores."
  },
  {
    "question": "¿Qué técnica se usa para proteger la información para que solo pueda ser leída por usuarios autorizados?",
    "options": ["Cifrado", "Hashing", "Autenticación", "Firewall"],
    "answer": 0,
    "explanation": "El cifrado transforma los datos en un formato ilegible sin la clave adecuada, protegiendo la confidencialidad."
  },
  {
    "question": "¿Qué tipo de requisito incluye atributos como rendimiento, seguridad y usabilidad?",
    "options": ["Funcional", "No funcional", "De negocio", "De implementación"],
    "answer": 1,
    "explanation": "Los requisitos no funcionales definen cómo debe comportarse el sistema en términos de calidad."
  },
  {
    "question": "¿Qué norma define características de calidad como mantenibilidad, fiabilidad y seguridad?",
    "options": ["ISO/IEC 12207", "IEEE 830", "ISO/IEC 25010", "IEEE 1012"],
    "answer": 2,
    "explanation": "La norma ISO/IEC 25010 establece un modelo de calidad para productos software."
  },
  {
    "question": "¿Qué técnica permite detectar vulnerabilidades en el código sin ejecutarlo?",
    "options": ["Prueba de penetración", "Análisis dinámico", "Análisis estático", "Refactorización"],
    "answer": 2,
    "explanation": "El análisis estático examina el código fuente para encontrar errores y vulnerabilidades antes de la ejecución."
  },
  {
    "question": "¿Qué tipo de documentación describe cómo se implementa una solución técnica?",
    "options": ["Diseño técnico", "Manual de usuario", "Plan de pruebas", "Especificación de requisitos"],
    "answer": 0,
    "explanation": "El diseño técnico detalla la arquitectura, componentes y decisiones de implementación del sistema."
  },
  {
    "question": "¿Qué métrica mide el número de caminos independientes en el código fuente?",
    "options": ["Cohesión", "Complejidad ciclomática", "Acoplamiento", "Cobertura de código"],
    "answer": 1,
    "explanation": "La complejidad ciclomática indica la cantidad de decisiones lógicas y caminos posibles en el código."
  },
  {
    "question": "¿Qué tipo de prueba se realiza para verificar el comportamiento del sistema bajo condiciones extremas?",
    "options": ["Prueba de carga", "Prueba de estrés", "Prueba de aceptación", "Prueba de integración"],
    "answer": 1,
    "explanation": "La prueba de estrés evalúa cómo responde el sistema ante condiciones límite o sobrecarga."
  },
  {
    "question": "¿Qué técnica permite mejorar la estructura interna del código sin cambiar su comportamiento externo?",
    "options": ["Refactorización", "Compilación", "Prueba de unidad", "Modelado de amenazas"],
    "answer": 0,
    "explanation": "La refactorización mejora la legibilidad y mantenibilidad del código sin alterar su funcionalidad."
  },
  {
    "question": "¿Qué tipo de requisito describe condiciones técnicas como plataforma, lenguaje o base de datos?",
    "options": ["Funcional", "No funcional", "De implementación", "De negocio"],
    "answer": 2,
    "explanation": "Los requisitos de implementación especifican restricciones técnicas necesarias para desarrollar el sistema."
  },
  {
    "question": "¿Qué técnica se usa para representar el comportamiento del sistema ante eventos externos?",
    "options": ["Diagrama de clases", "Diagrama de estados", "Diagrama de flujo", "Diagrama de casos de uso"],
    "answer": 1,
    "explanation": "El diagrama de estados muestra cómo responde el sistema a eventos y transiciones entre estados."
  },
  {
    "question": "¿Qué tipo de documentación explica cómo usar el sistema desde el punto de vista del usuario?",
    "options": ["Diseño técnico", "Manual de usuario", "Plan de pruebas", "Especificación de requisitos"],
    "answer": 1,
    "explanation": "El manual de usuario proporciona instrucciones claras para operar el sistema desde una perspectiva funcional."
  },
  {
    "question": "¿Qué métrica evalúa la facilidad de uso del sistema por parte del usuario final?",
    "options": ["Usabilidad", "Portabilidad", "Fiabilidad", "Mantenibilidad"],
    "answer": 0,
    "explanation": "La usabilidad mide qué tan fácil y eficiente es para el usuario interactuar con el sistema."
  },
  {
    "question": "¿Qué técnica permite representar visualmente el flujo de datos entre procesos y almacenes?",
    "options": ["Diagrama de clases", "Diagrama de flujo de datos (DFD)", "Diagrama de estados", "Diagrama de casos de uso"],
    "answer": 1,
    "explanation": "El DFD muestra cómo los datos se mueven entre procesos, almacenes y entidades externas."
  },
  {
    "question": "¿Qué tipo de prueba se realiza para verificar que los cambios no afectaron funcionalidades previas?",
    "options": ["Prueba de regresión", "Prueba de aceptación", "Prueba de integración", "Prueba de carga"],
    "answer": 0,
    "explanation": "La prueba de regresión asegura que el software sigue funcionando correctamente después de cambios o correcciones."
  }
]
