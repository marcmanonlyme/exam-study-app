[
  {
    "question": "¿Qué estructura de datos se usa para implementar el recorrido en profundidad (DFS)?",
    "options": ["Cola", "Pila", "Lista", "Árbol"],
    "answer": 1,
    "explanation": "El recorrido en profundidad (DFS) utiliza una pila para explorar nodos antes de retroceder."
  },
  {
    "question": "¿Qué tipo de prueba se realiza para verificar que el sistema cumple con los requisitos no funcionales?",
    "options": ["Prueba de validación", "Prueba de carga", "Prueba de aceptación", "Prueba de integración"],
    "answer": 1,
    "explanation": "Las pruebas de carga y rendimiento evalúan requisitos no funcionales como velocidad, escalabilidad y estabilidad."
  },
  {
    "question": "¿Qué técnica permite definir una interfaz común para múltiples clases con comportamientos distintos?",
    "options": ["Herencia", "Encapsulamiento", "Polimorfismo", "Abstracción"],
    "answer": 2,
    "explanation": "El polimorfismo permite que diferentes clases respondan de manera distinta a la misma interfaz o método."
  },
  {
    "question": "¿Qué tipo de mantenimiento se realiza para agregar nuevas funcionalidades?",
    "options": ["Correctivo", "Adaptativo", "Perfectivo", "Preventivo"],
    "answer": 2,
    "explanation": "El mantenimiento perfectivo busca mejorar el sistema agregando nuevas funciones o mejorando las existentes."
  },
  {
    "question": "¿Qué tipo de prueba se realiza para verificar que el sistema cumple con lo que el usuario espera?",
    "options": ["Prueba de unidad", "Prueba de integración", "Prueba de validación", "Prueba de regresión"],
    "answer": 2,
    "explanation": "La validación asegura que el sistema cumple con los requisitos funcionales definidos por el usuario."
  },
  {
    "question": "¿Qué estructura de datos permite representar relaciones jerárquicas como árboles genealógicos?",
    "options": ["Lista", "Cola", "Árbol", "Grafo"],
    "answer": 2,
    "explanation": "Los árboles permiten representar relaciones jerárquicas como padre-hijo, ideales para estructuras como genealogías."
  },
  {
    "question": "¿Qué modelo de desarrollo enfatiza la gestión de riesgos en cada iteración?",
    "options": ["Cascada", "Incremental", "Ágil", "Espiral"],
    "answer": 3,
    "explanation": "El modelo espiral incorpora gestión de riesgos en cada ciclo de desarrollo."
  },
  {
    "question": "¿Qué tipo de prueba se realiza después de corregir un error para asegurar que no se introdujeron nuevos fallos?",
    "options": ["Prueba de aceptación", "Prueba de regresión", "Prueba de integración", "Prueba de carga"],
    "answer": 1,
    "explanation": "La prueba de regresión verifica que los cambios no hayan afectado funcionalidades existentes."
  },
  {
    "question": "¿Qué principio SOLID indica que una clase debe tener una sola razón para cambiar?",
    "options": ["Open/Closed", "Single Responsibility", "Liskov Substitution", "Interface Segregation"],
    "answer": 1,
    "explanation": "El principio de responsabilidad única (SRP) indica que una clase debe tener una sola responsabilidad."
  },
  {
    "question": "¿Qué norma define los requisitos para la documentación de requisitos de software?",
    "options": ["IEEE 830", "ISO/IEC 12207", "ISO/IEC 25010", "IEEE 1012"],
    "answer": 0,
    "explanation": "La norma IEEE 830 establece cómo documentar los requisitos funcionales y no funcionales del software."
  },
  {
    "question": "¿Qué tipo de prueba se realiza para verificar la interacción entre módulos?",
    "options": ["Prueba unitaria", "Prueba de integración", "Prueba de validación", "Prueba de aceptación"],
    "answer": 1,
    "explanation": "La prueba de integración verifica que los módulos funcionen correctamente al interactuar entre sí."
  },
  {
    "question": "¿Qué estructura de datos se usa para implementar una agenda de tareas con prioridad?",
    "options": ["Cola simple", "Pila", "Cola de prioridad", "Lista enlazada"],
    "answer": 2,
    "explanation": "Una cola de prioridad organiza elementos según su importancia, ideal para tareas urgentes."
  },
  {
    "question": "¿Qué técnica permite definir clases abstractas que no pueden ser instanciadas directamente?",
    "options": ["Herencia", "Encapsulamiento", "Polimorfismo", "Abstracción"],
    "answer": 3,
    "explanation": "La abstracción permite definir clases base con métodos que deben ser implementados por sus subclases."
  },
  {
    "question": "¿Qué tipo de mantenimiento se realiza para adaptar el software a nuevos entornos?",
    "options": ["Correctivo", "Perfectivo", "Preventivo", "Adaptativo"],
    "answer": 3,
    "explanation": "El mantenimiento adaptativo modifica el software para que funcione en nuevos entornos o plataformas."
  },
  {
    "question": "¿Qué tipo de prueba se realiza para verificar que el sistema completo funciona como se espera?",
    "options": ["Prueba de unidad", "Prueba de integración", "Prueba de sistema", "Prueba de regresión"],
    "answer": 2,
    "explanation": "La prueba de sistema valida el comportamiento del software como un todo, incluyendo todos los componentes integrados."
  },
  {
    "question": "¿Qué estructura de datos se usa para implementar árboles de decisión?",
    "options": ["Lista", "Árbol binario", "Cola", "Pila"],
    "answer": 1,
    "explanation": "Los árboles binarios permiten representar decisiones con condiciones y resultados en cada nodo."
  },
  {
    "question": "¿Qué tipo de prueba se realiza para verificar el comportamiento del sistema bajo condiciones extremas?",
    "options": ["Prueba de carga", "Prueba de estrés", "Prueba de aceptación", "Prueba de integración"],
    "answer": 1,
    "explanation": "La prueba de estrés evalúa cómo responde el sistema ante condiciones límite o sobrecarga."
  },
  {
    "question": "¿Qué técnica permite reutilizar código mediante clases base y derivadas?",
    "options": ["Encapsulamiento", "Herencia", "Polimorfismo", "Abstracción"],
    "answer": 1,
    "explanation": "La herencia permite que una clase derive de otra y reutilice sus atributos y métodos."
  },
  {
    "question": "¿Qué tipo de prueba se realiza por el cliente para aceptar el sistema?",
    "options": ["Prueba de integración", "Prueba de sistema", "Prueba de aceptación", "Prueba unitaria"],
    "answer": 2,
    "explanation": "La prueba de aceptación valida que el sistema cumple con los requisitos del cliente antes de su implementación."
  },
  {
    "question": "¿Qué norma define características de calidad como fiabilidad, usabilidad y mantenibilidad?",
    "options": ["ISO/IEC 12207", "IEEE 830", "ISO/IEC 25010", "IEEE 1012"],
    "answer": 2,
    "explanation": "La norma ISO/IEC 25010 establece un modelo de calidad para productos software."
  }
]
