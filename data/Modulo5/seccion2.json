[
  {
    "question": "¿Qué lenguaje se usa para desarrollar aplicaciones móviles nativas en Android?",
    "options": ["Swift", "Java", "Kotlin", "Dart"],
    "answer": 2,
    "explanation": "Kotlin es el lenguaje oficial recomendado por Google para el desarrollo nativo en Android."
  },
  {
    "question": "¿Qué lenguaje se usa para desarrollar aplicaciones móviles nativas en iOS?",
    "options": ["Java", "Swift", "Kotlin", "Objective-C"],
    "answer": 1,
    "explanation": "Swift es el lenguaje moderno utilizado para desarrollar apps nativas en iOS."
  },
  {
    "question": "¿Qué framework permite desarrollar apps móviles multiplataforma con JavaScript?",
    "options": ["Flutter", "React Native", "Xamarin", "Ionic"],
    "answer": 1,
    "explanation": "React Native permite crear apps móviles para Android e iOS usando JavaScript y React."
  },
  {
    "question": "¿Qué framework permite desarrollar apps móviles con Dart?",
    "options": ["React Native", "Flutter", "Ionic", "Cordova"],
    "answer": 1,
    "explanation": "Flutter usa Dart para crear interfaces nativas rápidas y multiplataforma."
  },
  {
    "question": "¿Qué framework web usa componentes reutilizables y JSX?",
    "options": ["Angular", "Vue.js", "React", "Svelte"],
    "answer": 2,
    "explanation": "React utiliza componentes y JSX para construir interfaces de usuario dinámicas."
  },
  {
    "question": "¿Qué framework web usa TypeScript y arquitectura basada en módulos?",
    "options": ["React", "Vue.js", "Angular", "Svelte"],
    "answer": 2,
    "explanation": "Angular está basado en TypeScript y organiza el código en módulos y componentes."
  },
  {
    "question": "¿Qué framework web es conocido por su simplicidad y reactividad progresiva?",
    "options": ["Angular", "React", "Vue.js", "Next.js"],
    "answer": 2,
    "explanation": "Vue.js es ligero, fácil de aprender y permite construir interfaces reactivas de forma progresiva."
  },
  {
    "question": "¿Qué tipo de API se basa en recursos accesibles mediante URLs y métodos HTTP?",
    "options": ["SOAP", "REST", "GraphQL", "RPC"],
    "answer": 1,
    "explanation": "Las APIs REST usan métodos HTTP como GET, POST, PUT y DELETE para acceder a recursos."
  },
  {
    "question": "¿Qué tipo de API permite consultar múltiples recursos en una sola petición?",
    "options": ["REST", "SOAP", "GraphQL", "RPC"],
    "answer": 2,
    "explanation": "GraphQL permite definir exactamente qué datos se necesitan y obtenerlos en una sola consulta."
  },
  {
    "question": "¿Qué herramienta permite documentar y probar APIs REST de forma visual?",
    "options": ["Postman", "Swagger", "Jest", "Git"],
    "answer": 1,
    "explanation": "Swagger genera documentación interactiva para APIs REST usando especificaciones OpenAPI."
  },
  {
    "question": "¿Qué tipo de prueba automatizada se enfoca en validar flujos completos del sistema?",
    "options": ["Prueba unitaria", "Prueba de integración", "Prueba de sistema", "Prueba de regresión"],
    "answer": 2,
    "explanation": "La prueba de sistema verifica el comportamiento del software como un todo."
  },
  {
    "question": "¿Qué tipo de prueba se realiza después de modificar el código para asegurar que no se rompió nada?",
    "options": ["Prueba de carga", "Prueba de regresión", "Prueba de aceptación", "Prueba de integración"],
    "answer": 1,
    "explanation": "La prueba de regresión asegura que los cambios no afectaron funcionalidades existentes."
  },
  {
    "question": "¿Qué herramienta permite ejecutar pruebas automatizadas en aplicaciones web con Selenium?",
    "options": ["Jest", "Mocha", "JUnit", "WebDriver"],
    "answer": 3,
    "explanation": "WebDriver es el componente de Selenium que permite controlar navegadores para pruebas automatizadas."
  },
  {
    "question": "¿Qué herramienta permite ejecutar pruebas automatizadas en aplicaciones móviles?",
    "options": ["Appium", "Selenium", "Jest", "Postman"],
    "answer": 0,
    "explanation": "Appium permite automatizar pruebas en apps móviles nativas, híbridas y web."
  },
  {
    "question": "¿Qué herramienta permite integrar pruebas y despliegue continuo en proyectos de software?",
    "options": ["Git", "Docker", "Jenkins", "Postman"],
    "answer": 2,
    "explanation": "Jenkins automatiza tareas como pruebas, compilación y despliegue en entornos de integración continua."
  },
  {
    "question": "¿Qué herramienta permite contener aplicaciones y sus dependencias para facilitar el despliegue?",
    "options": ["Git", "Jenkins", "Docker", "Node.js"],
    "answer": 2,
    "explanation": "Docker encapsula aplicaciones en contenedores portables y reproducibles."
  },
  {
    "question": "¿Qué archivo define la configuración de un contenedor Docker?",
    "options": ["docker-compose.yml", "Dockerfile", "package.json", "config.yaml"],
    "answer": 1,
    "explanation": "Dockerfile contiene instrucciones para construir una imagen de contenedor."
  },
  {
    "question": "¿Qué comando se usa para construir una imagen Docker desde un Dockerfile?",
    "options": ["docker build", "docker run", "docker create", "docker compose"],
    "answer": 0,
    "explanation": "docker build crea una imagen a partir de las instrucciones definidas en un Dockerfile."
  },
  {
    "question": "¿Qué comando se usa para iniciar múltiples contenedores definidos en docker-compose.yml?",
    "options": ["docker compose up", "docker start", "docker deploy", "docker run"],
    "answer": 0,
    "explanation": "docker compose up inicia todos los servicios definidos en el archivo docker-compose.yml."
  }
]
