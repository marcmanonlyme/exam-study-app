[
  {
    "question": "¿Qué tipo de prueba se realiza para verificar que el sistema cumple con los requisitos funcionales?",
    "options": ["Prueba de integración", "Prueba de validación", "Prueba de carga", "Prueba de unidad"],
    "answer": 1,
    "explanation": "La validación asegura que el sistema cumple con los requisitos funcionales definidos por el usuario."
  },
  {
    "question": "¿Qué técnica permite representar visualmente los requisitos del sistema?",
    "options": ["Diagrama de flujo", "Casos de uso", "Pruebas unitarias", "Modelo de datos"],
    "answer": 1,
    "explanation": "Los casos de uso representan interacciones entre actores y el sistema para cumplir objetivos específicos."
  },
  {
    "question": "¿Qué métrica evalúa el grado de dependencia entre módulos?",
    "options": ["Cohesión", "Acoplamiento", "Portabilidad", "Usabilidad"],
    "answer": 1,
    "explanation": "El acoplamiento mide cuán interdependientes son los módulos; bajo acoplamiento es preferible."
  },
  {
    "question": "¿Qué tipo de documentación describe cómo se verificará que el sistema cumple con los requisitos?",
    "options": ["Plan de pruebas", "Diseño técnico", "Manual de usuario", "Especificación de requisitos"],
    "answer": 0,
    "explanation": "El plan de pruebas define los casos, criterios y procedimientos para validar el sistema."
  },
  {
    "question": "¿Qué técnica se usa para detectar vulnerabilidades en el código fuente?",
    "options": ["Pruebas unitarias", "Análisis estático", "Integración continua", "Refactorización"],
    "answer": 1,
    "explanation": "El análisis estático examina el código sin ejecutarlo para encontrar errores y vulnerabilidades."
  },
  {
    "question": "¿Qué tipo de requisito incluye atributos como rendimiento, seguridad y usabilidad?",
    "options": ["Funcional", "No funcional", "De negocio", "De implementación"],
    "answer": 1,
    "explanation": "Los requisitos no funcionales definen cómo debe comportarse el sistema en términos de calidad."
  },
  {
    "question": "¿Qué técnica permite validar que los requisitos están completos y correctos?",
    "options": ["Pruebas unitarias", "Revisión de requisitos", "Diseño técnico", "Codificación"],
    "answer": 1,
    "explanation": "La revisión de requisitos permite detectar errores, ambigüedades o inconsistencias antes del desarrollo."
  },
  {
    "question": "¿Qué patrón arquitectónico permite procesamiento secuencial de datos por etapas?",
    "options": ["Pipe and Filter", "MVC", "Microservicios", "Monolítico"],
    "answer": 0,
    "explanation": "Pipe and Filter organiza el sistema como una cadena de componentes que transforman datos secuencialmente."
  },
  {
    "question": "¿Qué métrica mide el número de decisiones lógicas en un programa?",
    "options": ["Complejidad ciclomática", "Acoplamiento", "Cohesión", "Cobertura de código"],
    "answer": 0,
    "explanation": "La complejidad ciclomática mide la cantidad de caminos independientes en el código."
  },
  {
    "question": "¿Qué tipo de prueba se realiza para verificar que el sistema cumple con los requisitos del cliente?",
    "options": ["Prueba de aceptación", "Prueba de integración", "Prueba de carga", "Prueba de unidad"],
    "answer": 0,
    "explanation": "La prueba de aceptación valida que el sistema cumple con lo que el cliente espera según los requisitos definidos."
  },
  {
    "question": "¿Qué técnica se usa para proteger la integridad de los datos transmitidos?",
    "options": ["Cifrado", "Hashing", "Firewall", "Autenticación"],
    "answer": 1,
    "explanation": "El hashing genera una huella digital del contenido para verificar que no ha sido alterado."
  },
  {
    "question": "¿Qué tipo de documentación describe los objetivos y alcance del sistema desde la perspectiva del cliente?",
    "options": ["Diseño técnico", "Manual de usuario", "Especificación de requisitos", "Plan de pruebas"],
    "answer": 2,
    "explanation": "La especificación de requisitos documenta lo que el sistema debe hacer según las necesidades del cliente."
  },
  {
    "question": "¿Qué métrica evalúa la facilidad con la que el software puede ser transferido a otro entorno?",
    "options": ["Fiabilidad", "Portabilidad", "Usabilidad", "Mantenibilidad"],
    "answer": 1,
    "explanation": "La portabilidad mide qué tan fácil es adaptar el software a diferentes plataformas o entornos."
  },
  {
    "question": "¿Qué técnica permite representar el comportamiento dinámico entre objetos?",
    "options": ["Diagrama de clases", "Diagrama de casos de uso", "Diagrama de secuencia", "Diagrama de componentes"],
    "answer": 2,
    "explanation": "El diagrama de secuencia muestra cómo los objetos interactúan en el tiempo para cumplir una función."
  },
  {
    "question": "¿Qué tipo de prueba se realiza para verificar la seguridad del sistema?",
    "options": ["Prueba de carga", "Prueba de estrés", "Prueba de penetración", "Prueba de regresión"],
    "answer": 2,
    "explanation": "La prueba de penetración simula ataques para identificar vulnerabilidades de seguridad."
  },
  {
    "question": "¿Qué técnica permite definir una interfaz común para múltiples clases con comportamientos distintos?",
    "options": ["Herencia", "Encapsulamiento", "Polimorfismo", "Abstracción"],
    "answer": 2,
    "explanation": "El polimorfismo permite que diferentes clases respondan de manera distinta a la misma interfaz o método."
  },
  {
    "question": "¿Qué tipo de requisito describe metas organizacionales que el sistema debe apoyar?",
    "options": ["Funcional", "No funcional", "De negocio", "De usuario"],
    "answer": 2,
    "explanation": "Los requisitos de negocio reflejan objetivos estratégicos que el sistema debe facilitar."
  },
  {
    "question": "¿Qué técnica se usa para modelar procesos de negocio?",
    "options": ["UML", "BPMN", "ERD", "DFD"],
    "answer": 1,
    "explanation": "BPMN (Business Process Model and Notation) permite modelar procesos de negocio de forma estandarizada."
  },
  {
    "question": "¿Qué métrica evalúa la capacidad del software para resistir fallos?",
    "options": ["Fiabilidad", "Usabilidad", "Eficiencia", "Portabilidad"],
    "answer": 0,
    "explanation": "La fiabilidad mide la capacidad del software para funcionar correctamente bajo condiciones específicas."
  },
  {
    "question": "¿Qué norma define procesos del ciclo de vida del software?",
    "options": ["ISO/IEC 9126", "IEEE 830", "ISO/IEC 12207", "IEEE 1012"],
    "answer": 2,
    "explanation": "La norma ISO/IEC 12207 establece los procesos del ciclo de vida del software desde su concepción hasta su retiro."
  }
]
